Gene set tests & correlation
====
author: Michael Love
date: July 2018
transition: none
autosize: false
width: 1000
font-family: 'Helvetica'

```{r echo=FALSE}
library(knitr)
opts_chunk$set(fig.align='center')
```

Gene set tests: competitive vs self-contained
=== 

From *CAMERA* publication:

>>> "... **self-contained** gene set tests examine a set of genes in their own right without reference to other genes in the genome, whereas **competitive** gene set tests compare genes in the test set relative to all other genes."

Gene set tests: competitive vs self-contained
=== 

From *CAMERA* publication:

>>> "**Self-contained** tests are of interest for assessing the relevance of an individual biological process to the experiment at hand, whereas the **competitive** tests focus more on distinguishing the most important biological processes from those that are less important. Competitive tests are overwhelmingly more commonly used in the genomic literature."

Gene set tests with correlation
===
incremental: true

(from [PH525x notes](http://genomicsclass.github.io/book/pages/gene_set_analysis.html)
and [Barry, Nobel and Wright, 2008](http://arxiv.org/abs/0803.3881))

Consider the average *t*-statistic from $N$ genes in a set $G$:

$$ \bar{t}=\frac{1}{N} \sum_{i \in G} t_i $$

This statistic $\bar{t}$ combines the information about DE
from the set and might be a useful test statistic.

Gene set tests with correlation
===
incremental: true

Under the null hypothesis, the $t$ have mean 0. If the $t$ are independent then $\sqrt{N} \bar{t}$ has standard deviation 1 and is approximately normal:

$$ \sqrt{N} \bar{t} \sim N(0,1) $$

This comes from the following decomposition of the variance:

$$ \begin{eqnarray}
\text{Var}(\bar{t}) &=& \frac{1}{N^2} \text{Var}(t_1 + \dots + t_N) \\
&=& \frac{1}{N^2}( \text{Var}(t_1) + \dots + \text{Var}(t_N) ) \\
&=& \frac{1}{N}
\end{eqnarray} $$

Gene set tests with correlation
===

Now consider the case that the test statistics $t_i$ in a gene set are not independent but have correlation $\rho$ *under the null hypothesis*.

$$ \bar{t}=\frac{1}{N} \sum_{i \in G} t_i $$

$$ \text{corr}(t_i, t_{i'}) = \rho, \quad i, i' \in G $$

===

The variance of the average *t*-statistics will be:

$$ \begin{eqnarray} \text{Var}(\bar{t}) &=& \frac{1}{N^2} \text{Var}( (1 \dots 1) (t_1 \dots t_N)' ) \\ 
&=& \frac{1}{N^2}(1 \dots 1) 
\begin{pmatrix} 1 & \rho & \dots & \rho & \rho \\
\rho & 1 & \rho & \dots & \rho \\
\dots & \dots & \dots & \dots & \dots \\
\rho & \rho & \dots & \rho & 1 \\
\end{pmatrix} 
(1 \dots 1) ' \\
&=& \frac{1}{N^2}\{N + (N-1) N \rho \} \\
&=& \frac{1}{N}\{1 + (N-1) \rho \} \end{eqnarray} $$

Variance inflation with correlation
===
incremental: true

So the variance inflation factor (VIF) comparing the independent case to the case with correlation is:

$$ VIF = 1 + (N-1) \bar{\rho} $$

So the increased width (standard deviation) of the null distribution for a gene set with 20 genes and average correlation 0.1 will be:

```{r}
sqrt(1 + 19 * 0.1)
```

This VIF is approximately true also for testing the set statistics against the complement: the genes not in the set (see Barry, Nobel and Wright 2008).

Test statistic vs expression correlations
===

Here, the expression of 5 samples vs 5 samples, no difference in expression across group but a correlation of gene expression.


```{r echo=FALSE}
library(mvtnorm)
rho <- .2
sigma <- matrix(rho, ncol=2, nrow=2)
diag(sigma) <- 1
nrep <- 10000
x <- rmvnorm(nrep, mean=rep(0,2), sigma=sigma)
```

```{r echo=FALSE}
library(rafalib)
bigpar()
plot(x, cex=.1, asp=1, xlab="gene 1", ylab="gene 2", main=paste("Normal distribution with corr =",rho), col="grey")
points(x[1:10,], cex=1.5, pch=16, col = rep(c("red","dodgerblue"),each=5))
legend("topleft", c("group 1","group 2"), 
       col=c("red","dodgerblue"), pch=16, cex=2)
```


Test statistic vs expression correlations
===

If the test statistic $T$ is a linear form of the data $X$ (e.g. log fold change), then:

$$ \rho^T_{i,i'} = \rho^X_{i,i'} $$

For t-test, the relationship is monotone, approximately linear and: 

$$ \rho^T_{i,i'} \approx \rho^X_{i,i'} $$

(Barry, Nobel and Wright, 2008)

Simulate expression correlation of 0.2
===

```{r echo=FALSE, cache=TRUE}
nrep <- 100000 
rho <- .2
sigma <- matrix(rho, ncol=2, nrow=2)
diag(sigma) <- 1
x <- rmvnorm(nrep, mean=rep(0,2), sigma=sigma)
n <- 10
y1 <- matrix(x[,1], ncol=n, nrow=nrep/n, byrow=TRUE)
y2 <- matrix(x[,2], ncol=n, nrow=nrep/n, byrow=TRUE)
f <- factor(rep(1:2, each=5))
library(genefilter)
t1 <- rowttests(y1, f, tstatOnly = TRUE)
t2 <- rowttests(y2, f, tstatOnly = TRUE)
```

```{r echo=FALSE}
bigpar()
plot(t1$statistic, t2$statistic, cex=.1, asp=1, xlab="t-stat gene 1", ylab="t-stat gene 2")
legend("top", paste("est. t corr =", round(cor(t1$statistic, t2$statistic),2)), cex=2)
```


Distribution of t-statistics
===

```{r echo=FALSE, cache=TRUE}
# now let N be the number of genes in a gene set
N <- 20
rho <- 0.2
sigma <- matrix(rho, ncol=N, nrow=N)
diag(sigma) <- 1
n <- 10 # let n be the number of samples
t <- rmvt(n=10000, sigma=sigma, df=n-1)
t.star <- sqrt(N) * rowMeans(t)
VINF <- 1 + (N - 1) * rho
```

```{r echo=FALSE, fig.width=10, fig.height=6}
bigpar()
hist(t.star,breaks=200,col="grey",border="white",freq=FALSE,
     ylim=c(0,.5),xlim=c(-6,6),
     main="Gene set of size 20, corr. 0.2",
     xlab="t-statistics")
s <- seq(from=-6,to=6,length=100)
lines(s, dnorm(s),col="magenta",lwd=3)
lines(s, dnorm(s,0,sqrt(VINF)),col="dodgerblue",lwd=3)
legend("topleft", c("N(0,1)","N(0,VINF)"), col=c("magenta","dodgerblue"), lwd=3, cex=2)
```


`r round(mean(abs(t.star) > qnorm(.995)) * 100)`% of the simulated t-statistics are outside of the center 99% of the $N(0,1)$ distribution.

Again, with correlation of 0.8
===

```{r echo=FALSE, cache=TRUE}
nrep <- 100000 
rho <- .8
sigma <- matrix(rho, ncol=2, nrow=2)
diag(sigma) <- 1
x <- rmvnorm(nrep, mean=rep(0,2), sigma=sigma)
n <- 10
y1 <- matrix(x[,1], ncol=n, nrow=nrep/n, byrow=TRUE)
y2 <- matrix(x[,2], ncol=n, nrow=nrep/n, byrow=TRUE)
f <- factor(rep(1:2, each=5))
library(genefilter)
t1 <- rowttests(y1, f, tstatOnly = TRUE)
t2 <- rowttests(y2, f, tstatOnly = TRUE)
```

```{r echo=FALSE}
bigpar()
plot(t1$statistic, t2$statistic, cex=.1, asp=1, xlab="t-stat gene 1", ylab="t-stat gene 2")
legend("top", paste("est. t corr =", round(cor(t1$statistic, t2$statistic),2)), cex=2)
```

Distribution of t-statistics (corr = 0.8)
===

```{r echo=FALSE, cache=TRUE}
# now let N be the number of genes in a gene set
N <- 20
rho <- 0.8
sigma <- matrix(rho, ncol=N, nrow=N)
diag(sigma) <- 1
n <- 10 # let n be the number of samples
t <- rmvt(n=10000, sigma=sigma, df=n-1)
t.star <- sqrt(N) * rowMeans(t)
VINF <- 1 + (N - 1) * rho
```

```{r echo=FALSE, fig.width=10, fig.height=6}
bigpar()
hist(t.star,breaks=200,col="grey",border="white",freq=FALSE,
     ylim=c(0,.5),xlim=c(-6,6),
     main="Gene set of size 20, corr. 0.8",
     xlab="t-statistics")
s <- seq(from=-6,to=6,length=100)
lines(s, dnorm(s),col="magenta",lwd=3)
lines(s, dnorm(s,0,sqrt(VINF)),col="dodgerblue",lwd=3)
legend("topleft", c("N(0,1)","N(0,VINF)"), col=c("magenta","dodgerblue"), lwd=3, cex=2)
```


`r round(mean(abs(t.star) > qnorm(.995)) * 100)`% of the simulated t-statistics are outside of the center 99% of the $N(0,1)$ distribution.

Intuition
===
incremental: true

* Suppose expression is correlated within a gene set under the null
* By chance, for some gene, the expression could be high 
  for the group 2 samples, and low for group 1 samples
* The t-statistic will be large and positive for this gene
* Because expression is correlated across genes in the set,
  other genes will likely see the same pattern
* t-statistics will be correlated within the set

Why would we see null correlations?
===
incremental: true

Where do expression correlations *under the null* come from? My guesses in order of importance:

* uncorrected "batch effects"
  - library preparation
  - RNA extraction
  - biological: cell-type composition
* large scale amplifications in cancer
* gene regulatory networks


CAMERA (Wu and Smyth 2012)
===

for **C**orrelation **A**djusted **ME**an **RA**nk gene set test, available in the limma package.

* estimating the inter-gene correlation from the data 
* using it to adjust the gene set test statistic
* suitable for any experiment that can be represented by genewise linear models
* a competitive gene set test

Permutations
===

Assume the null: no differences across condition, although
gene-gene correlation are present


```{r, echo=FALSE}
bigpar(2,1)
x1 <- rep(1:3,2)
x2 <- rep(4:6,2)
f <- rep(1:2, each=3)
barplot(x1, col=f, ylim=c(0,6), ylab="gene 1", xlab="samples")
barplot(x2, col=f, ylab="gene 2", xlab="samples")
```


Permutations
===

Assume the null: no differences across condition, although
gene-gene correlation are present


```{r, echo=FALSE}
bigpar(2,1)
idx <- c(1,5,2,3,4,6)
x1 <- rep(1:3,2)
x2 <- rep(4:6,2)
f <- rep(1:2, each=3)
barplot(x1[idx], col=f[idx], ylim=c(0,6), ylab="gene 1", xlab="samples")
barplot(x2[idx], col=f[idx], ylab="gene 2", xlab="samples")
```


Permutations
===

Has limitations:

* only if samples are exchangeable (no batch effects)
* not easy to implement for complex designs (although see SAMseq in the [samr](http://cran.r-project.org/web/packages/samr/index.html) package for strategies)
* requires sufficient samples for small p-values (although see [Larsen and Owen](http://arxiv.org/abs/1405.1383) for moment-based trick)

Approach using residuals
===

Suppose we have a 2 condition experiment with 2 batches:

```{r echo=FALSE}
f <- rep(c(1,2,1,2),each=3)
batch <- rep(1:2, each=6)
set.seed(1)
x1 <- rnorm(12) + 0.5 * f + batch
mus <- tapply(x1, rep(1:4, each=3), mean)
```

```{r echo=FALSE, fig.width=10, fig.height=7}
bigpar()
plot(x1, col=f, pch=batch, xlab="sample", ylab="expression", main="Model residuals", cex=2)
legend("bottomright", c("cond 1 batch 1", "cond 2 batch 1", "cond 1 batch 2", "cond 2 batch 2"), col=c(1,2,1,2), pch=c(1,1,2,2) ,cex=2)
segments(c(1,4,7,10),mus,c(3,6,9,12),mus, col=c(1,2,1,2), lwd=2, lty=2)
segments(1:12, x1, 1:12, rep(mus, each=3), col=rep(c(1,2,1,2),each=3), lwd=2)
```


Approach using residuals
===

Remove design matrix columns not involving the null hypothesis:


```{r echo=FALSE}
f <- rep(c(1,2,1,2),each=3)
batch <- rep(1:2, each=6)
set.seed(1)
x1 <- rnorm(12) + 0.5 * f + batch
mus <- rep(tapply(x1, rep(1:2, each=6), mean), each=2)
```

```{r echo=FALSE, fig.width=10, fig.height=7}
bigpar()
plot(x1, col=f, pch=batch, xlab="sample", ylab="expression", main="Model residuals", cex=2)
legend("bottomright", c("cond 1 batch 1", "cond 2 batch 1", "cond 1 batch 2", "cond 2 batch 2"), col=c(1,2,1,2), pch=c(1,1,2,2), cex=2)
segments(c(1,4,7,10),mus,c(3,6,9,12),mus, col=c(1,2,1,2), lwd=2, lty=2)
segments(1:12, x1, 1:12, rep(mus, each=3), col=rep(c(1,2,1,2),each=3), lwd=2)
```


ROAST (Wu et al. 2010)
===

The ROAST method available in the limma package:

Under the null hypothesis (and assuming a linear model) the residuals are independent and identically distributed $N(0, \sigma_g^2)$.

We can *rotate* the residual vector for each gene in a gene set, such that gene-gene expression correlations are preserved.

What does residual rotation look like?
===

Like this diagram but around an n-sphere (n, the number of samples).


```{r, echo=FALSE}
library(plotrix)
bigpar()
plot(3*1/sqrt(5), 3*2/sqrt(5), xlim=c(-3,3), ylim=c(-3,3), xlab="residual, sample 1", ylab="residual, sample 2", asp=1, cex=1.5, pch=4, lwd=2)
draw.circle(0,0,3)
abline(h=0,v=0,lty=2)
arrows(0,0,2.8*1/sqrt(5), 2.8*2/sqrt(5), lwd=2)
```


ROAST (Wu et al. 2010)
===
incremental: true

Repeat 10,000 times:

1. rotate the residual vector from each gene in the set using the same rotation
2. create new data, preserving the gene-gene correlations
3. compute test statistics for the rotated data for each gene and compute the gene set statistic

Lastly compare the original gene set statistic to the null distribution from 1-3.

Pros: fast and efficient, fits with any linear model. Designed for testing a single gene set (self-contained), for testing many see **mROAST** (also self-contained).

Summary
===

1. "**Self-contained** tests are of interest for assessing the relevance of an individual biological process"
2. "**Competitive** tests focus more on distinguishing the most important biological processes from those that are less important"
3. Gene-gene correlations inflate the null distribution of gene set statistics
4. This inflation factor can be directly calculated from the data (CAMERA)
5. Rotating residuals can also be used to generate a null which incorporates correlations (ROAST)