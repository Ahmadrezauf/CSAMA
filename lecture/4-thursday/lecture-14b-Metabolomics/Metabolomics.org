#+TITLE: Metabolomics data analysis with Bioconductor
#+AUTHOR: Johannes Rainer
#+EMAIL: johannes.rainer@eurac.edu
#+SETUPFILE: orgsetup.org

* Metabolomics data analysis with Bioconductor

*CSAMA2017*

*Johannes Rainer* (Eurac Research, Italy)
johannes.rainer@eurac.edu
github/twitter: jotsetung

+ Focus on pre-processing of LCMS data.
+ Focus on the =xcms= package, but other exist too (e.g. =yamss=).

** Metabolomics?

+ Is the large-scale study of small molecules (metabolites) in a system (cell,
  tissue or organism).
+ Metabolites are intermediate or end products of metabolic pathways.
+ From Genome to Metabolome:
  - *Genome*: what can happen.
  - *Transcriptome*: what appears to be happening.
  - *Proteome*: what makes it happen.
  - *Metabolome*: what actually happened. Influenced by genetic *and* environmental
    factors.

** How are we measuring that?

*** Nuclear magnetic Resonance (NMR)
*** MS-based metabolomics

**** Mass Spectrometry (MS)
  [[./images/MS.png]]

+ Problem: can not distinguish between metabolites with the same m/z.

**** Liquid Chromatography Mass Spectrometry (LCMS)

[[./images/LCMS.png]]

+ Combines physical separation via LC with MS for mass analysis.
+ Additional time dimension to separate different ions with same m/z.
+ Also, Gas Chromatography MS (GCMS).

** LCMS-based metabolomics data pre-processing

+ *Input*: mzML or netCDF files with multiple MS spectra per sample.
+ *Output*: matrix of abundances, rows being /features/, columns samples.
+ Bioconductor: =xcms= package (/new/ user interface).
+ Load files from the =faahKO= data package.
  #+BEGIN_SRC R :results silent
    library(xcms)
    library(faahKO)
    library(RColorBrewer)

    cdf_files <- dir(system.file("cdf", package = "faahKO"), recursive = TRUE,
		     full.names = TRUE)[c(1, 2, 7, 8)]
    ## Read the data
    faahKO <- readMSData2(cdf_files)
  #+END_SRC
+ =OnDiskMSnExp=: small memory footprint, loads data on-demand.

*** Peak detection

+ Identify chromatographic peaks within slices along mz dimension.
+ How do such peaks look like?
  #+BEGIN_SRC R :results output graphics :file images/_chrom-peak-example.png
    ## Extract the chromatogram for an mz-rt slice
    chrs <- extractChromatograms(faahKO, mz = c(241.1, 241.2), rt = c(3550, 3800))

    ## Plot the chromatogram(s)
    cols <- brewer.pal(3, "Set1")[c(1, 1, 2, 2)]
    plotChromatogram(chrs, col = paste0(cols, 80))
  #+END_SRC
+ *centWave* (Tautenhahn et al. /BMC Bioinformatics/, 2008):
  #+BEGIN_SRC R :results silent
    ## Do centWave-based peak detection
    faahKO <- findChromPeaks(faahKO, param = CentWaveParam())
  #+END_SRC
  1) Detection of regions of interest
    [[./images/centWave-ROI.png]]
    - mz-rt regions with low mz-variance.
  2) Peak detection using continuous wavelet transform (CWT)
    [[./images/centWave-CWT.png]]
    - Corresponds to multiple Gaussian fits and choosing the best.
+ =XCMSnExp=: container for LC/GC-MS results, extends =OnDiskMSnExp=.
  #+BEGIN_SRC R :results output
    ## Extract identified chromatographic peaks
    head(chromPeaks(faahKO))
  #+END_SRC
  
*** Alignment

+ Adjust retention time differences/shifts between samples.
  #+BEGIN_SRC R :results output graphics :file images/_bpc-raw.png
    ## Plot the TIC
    tics <- split(tic(faahKO), f = fromFile(faahKO))
    rts <- rtime(faahKO, bySample = TRUE)

    plot(3, 3, pch = NA, xlim = range(rts), ylim = range(tics),
	 xlab = "retention time", ylab = "intensity", main = "TIC")
    tmp <- mapply(rts, tics, paste0(cols, 80), FUN = function(x, y, col) {
	points(x, y, col = col, type = "l")
    })
  #+END_SRC
+ Overview of algorithms: (Smith et al. /Brief Bioinformatics/ 2013).
+ Assumptions: 
  - samples are relatively similar (either similar chromatograms or a
    set of common metabolites present in all).
  - Warping methods: analyte elution order is same in all samples.
+ =xcms=: obiwarp (Prince et al. /Anal Chem/, 2006), /peak groups/ (Smith
  et. al /Anal Chem/ 2006).
  #+BEGIN_SRC R :results output graphics :file images/_bpc_adjusted.png
    ## Use obiwarp to align the samples
    faahKO <- adjustRtime(faahKO, param = ObiwarpParam())

    par(mfrow = c(2, 1), mar = c(4, 4, 1, 0.5))
    plot(3, 3, pch = NA, xlim = range(rts), ylim = range(tics),
	 xlab = "retention time", ylab = "total ion intensity",
	 main = "Before adjustment")
    mapply(rts, tics, paste0(cols, 80), FUN = function(x, y, col) {
	points(x, y, col = col, type = "l")
    })

    ## Plot TIC after adjustment
    rts_adj <- rtime(faahKO, bySample = TRUE)
    plot(3, 3, pch = NA, xlim = range(rts_adj), ylim = range(tics),
	 xlab = "retention time", ylab = "total ion intensity",
	 main = "After adjustment")
    mapply(rts_adj, tics, paste0(cols, 80), FUN = function(x, y, col) {
	points(x, y, col = col, type = "l")
    })
  #+END_SRC

  #+BEGIN_SRC R :results output graphics :file images/_chrom-peak-example-2.png
    ## Plot extracted ion chromatogram for mz-rt slice
    chrs_adj <- extractChromatograms(faahKO, mz = c(241.1, 241.2),
				     rt = c(3550, 3800))

    par(mfrow = c(2, 1))
    plotChromatogram(chrs, col = paste0(cols, 80), main = "Before alignment")
    plotChromatogram(chrs_adj, col = paste0(cols, 80), main = "After alignment")
    #+END_SRC

*** Correspondence

+ Group detected peaks across samples.
+ =xcms=: /peak density/ method
  #+BEGIN_SRC R :results output graphics :file images/_peak-density-plot.png
    ## mz slice to plot
    mzr <- c(305.05, 305.15)

    ## Extract and plot the chromatograms
    chrs_2 <- extractChromatograms(faahKO, mz = mzr, rt = c(2500, 4000))

    par(mfrow = c(2, 1), mar = c(1, 4, 1, 0.5))
    plotChromatogram(chrs_2, col = paste0(cols, 80), xaxt = "n", xlab = "")

    ## Highlight the detected peaks in that region.
    highlightChromPeaks(faahKO, mz = mzr, col = paste0(cols, "05"),
			border = paste0(cols, 20))

    ## Define the parameters for the peak density method
    pdp <- PeakDensityParam(bw = 30)
    par(mar = c(4, 4, 1, 0.5))
    plotChromPeakDensity(faahKO, mz = mzr, col = paste0(cols, "60"), param = pdp,
			 pch = 16, xlim = c(2500, 4000))

  #+END_SRC
+ Peaks that are close in rt are grouped to a /feature/.
  #+BEGIN_SRC R :results silent
    ## Perform the correspondence using default peak density settings
    faahKO <- groupChromPeaks(faahKO, param = PeakDensityParam())

  #+END_SRC
+ Results can be accessed with =featureDefinitions= and =featureValues=:
  #+BEGIN_SRC R
    ## Definitions of the features:
    featureDefinitions(faahKO)

    ## Access feature intensities
    head(featureValues(faahKO, value = "into"))
  #+END_SRC
+ Final note: =XCMSnExp= object tracks all analysis steps.
  #+BEGIN_SRC R :results silent
    ## Extract the "processing history"
    processHistory(faahKO)
  #+END_SRC

** And what next?

*** Missing values

+ =xcms= provides the possibility to read data from raw files to fill-in missing
  peaks (=fillChromPeaks=).
+ Data imputation. Be aware of introduced correlations.

*** Data normalization

+ Adjust within batch and between batch differences.
+ Injection order dependent signal drift (Wehrens et al. /Metabolomics/ 2016).
  [[./images/signal-drift.png]]
+ =MetNorm= RUV for metabolomics (Livera et al. /Anal Chem/ 2015).
  
*** Identification

+ Annotate features to metabolites.
+ Features are *not* chemical compounds.
+ Features from the same compound are co-eluting and can be related (isotopes,
  adducts).
+ Starting point: =CAMERA= package.
+ On-line spectra databases (e.g. =MassBank=).
** Finally...

+ Hands on in the afternoon workshop.


*thank you for your attention!*
